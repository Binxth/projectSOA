<Window x:Class="ClientApp.ServicesScreen"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ClientApp"
        mc:Ignorable="d"
        Title="ServicesScreen" Height="450" Width="800">
    <Grid Margin="0,0,0,-149">
        <TextBlock x:Name="welcomeText" HorizontalAlignment="Left" Height="19" Margin="655,23,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="112" FontSize="14" FontWeight="Bold" TextAlignment="Right"/>
        <TextBlock HorizontalAlignment="Left" Height="27" Margin="262,49,0,0" TextWrapping="Wrap" Text="Welcome to the Service Registry" VerticalAlignment="Top" Width="232" FontSize="15" FontWeight="Bold" Foreground="#FF534C5C"/>
        <Button x:Name="getServicesButton"  Style="{DynamicResource RoundButton}" Content="Get All Services" HorizontalAlignment="Left" Margin="324,93,0,0" VerticalAlignment="Top" Height="18" Width="108"  Background="#FFE8DFCA" Click="getServicesButton_Click"/>
        <TextBox x:Name="searchBoxText" HorizontalAlignment="Left" Style="{DynamicResource TextBoxStyle1}" Height="25" Margin="238,141,0,0" TextWrapping="Wrap"  VerticalAlignment="Top" Width="206"  FontSize="12"
                 BorderBrush="{x:Null}"
                 Background="#FFE6EEF7"
                 Foreground="#FF4C4E52"/>
        <Button x:Name="searchServiceButton"  Style="{DynamicResource RoundButton}" Content="Search" HorizontalAlignment="Left" Margin="451,141,0,0" VerticalAlignment="Top" Height="18" Width="73" Background="#FFE6EEF7" Click="searchServiceButton_Click"/>
        <DataGrid AutoGenerateColumns="False" x:Name="allServiceTable" HorizontalAlignment="Center" Height="134" Margin="0,185,0,0" VerticalAlignment="Top" Width="780" PreviewMouseDoubleClick="allServiceTable_PreviewMouseDoubleClick">
            <DataGrid.Resources>
                <Style TargetType= "{x:Type DataGridColumnHeader}">
                    <Setter Property="Background" Value="White"/>
                    <Setter Property="BorderBrush" Value="Black"/>
                    <Setter Property="Foreground" Value="#FF534C5C"/>
                    <Setter Property="BorderThickness" Value="0"/>

                </Style>
            </DataGrid.Resources>
            <DataGrid.Columns>
                <DataGridTextColumn Header="Name" IsReadOnly="True" Binding="{Binding Name}" Width="150"></DataGridTextColumn>
                <DataGridTextColumn Header="Description" IsReadOnly="True" Binding="{Binding Description}" Width="200"></DataGridTextColumn>
                <DataGridTextColumn Header="API Endpoint" IsReadOnly="True" Binding="{Binding APIendpoint}" Width="250"></DataGridTextColumn>
                <DataGridTextColumn Header="Operands" IsReadOnly="True" Binding="{Binding NumOperands}" Width="75"></DataGridTextColumn>
                <DataGridTextColumn Header="Operand Type" IsReadOnly="True" Binding="{Binding OperandType}" Width="80"></DataGridTextColumn>
            </DataGrid.Columns>
        </DataGrid>
        <Label x:Name="labelDesc" Content="" Visibility="Visible" HorizontalAlignment="Left" Margin="10,346,0,0" VerticalAlignment="Top"/>
        <Label x:Name="labelAPI" Visibility="Visible" Content="" HorizontalAlignment="Left" Margin="10,377,0,0" VerticalAlignment="Top"/>
        <StackPanel x:Name="panel1" HorizontalAlignment="Left" Height="27" Margin="248,353,0,0" VerticalAlignment="Top" Width="66">
            <TextBox Name="txtbox1" Visibility="Hidden" Height="23" TextWrapping="Wrap" Text=""/>
        </StackPanel>
        <StackPanel HorizontalAlignment="Left" Height="27" Margin="346,353,0,0" VerticalAlignment="Top" Width="64" RenderTransformOrigin="0.328,0.483">
            <TextBox x:Name="txtbox2" Visibility="Hidden" Height="23" TextWrapping="Wrap" Text="" Margin="0,0,-0.6,0"/>
        </StackPanel>
        <StackPanel HorizontalAlignment="Left" Height="27" Margin="451,353,0,0" VerticalAlignment="Top" Width="53">
            <TextBox Name="txtbox3" Visibility="Hidden" Height="23" TextWrapping="Wrap" Text=""/>
        </StackPanel>
        <Button x:Name="CalcButton" Style="{DynamicResource RoundButton}" Visibility="hidden" Content="Calculate" HorizontalAlignment="Left" Margin="530,353,0,0" VerticalAlignment="Top" Width="55" Click="CalcButton_Click"/>

        <Button x:Name="LogoutButton"  Style="{DynamicResource RoundButton}" Content="Logout" HorizontalAlignment="Left" Margin="707,45,0,0" VerticalAlignment="Top" Height="10" Width="60" FontSize="10" Background="#FFFFD1D1" Click="LogoutButton_Click"/>
        <ProgressBar x:Name="progressBar" HorizontalAlignment="Left" Margin="324,331,0,0" VerticalAlignment="Top" Width="120" Height="7"/>

    </Grid>


    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="RoundButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="5" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" Margin="0,0,0,-7">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
        <Style x:Key="TextBoxStyle1" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
</Window>
